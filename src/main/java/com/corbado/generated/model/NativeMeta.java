/*
 * Corbado Backend API
 * # Introduction This documentation gives an overview of all Corbado Backend API calls to implement passwordless authentication with Passkeys. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@corbado.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.corbado.generated.model;

import java.util.Objects;
import java.util.Locale;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Locale;

import com.corbado.generated.invoker.JSON;

/**
 * NativeMeta
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-10T13:05:36.841382713Z[Etc/UTC]", comments = "Generator version: 7.16.0-SNAPSHOT")
public class NativeMeta {
  public static final String SERIALIZED_NAME_BUILD = "build";
  @SerializedName(SERIALIZED_NAME_BUILD)
  @javax.annotation.Nonnull
  private String build;

  public static final String SERIALIZED_NAME_DEVICE_OWNER_AUTH = "deviceOwnerAuth";
  @SerializedName(SERIALIZED_NAME_DEVICE_OWNER_AUTH)
  @javax.annotation.Nullable
  private String deviceOwnerAuth;

  public static final String SERIALIZED_NAME_IS_PLATFORM_AUTHENTICATOR_A_P_I_SUPPORTED = "isPlatformAuthenticatorAPISupported";
  @SerializedName(SERIALIZED_NAME_IS_PLATFORM_AUTHENTICATOR_A_P_I_SUPPORTED)
  @javax.annotation.Nullable
  private Boolean isPlatformAuthenticatorAPISupported;

  public static final String SERIALIZED_NAME_IS_BLUETOOTH_AVAILABLE = "isBluetoothAvailable";
  @SerializedName(SERIALIZED_NAME_IS_BLUETOOTH_AVAILABLE)
  @javax.annotation.Nullable
  private Boolean isBluetoothAvailable;

  public static final String SERIALIZED_NAME_IS_BLUETOOTH_ON = "isBluetoothOn";
  @SerializedName(SERIALIZED_NAME_IS_BLUETOOTH_ON)
  @javax.annotation.Nullable
  private Boolean isBluetoothOn;

  public static final String SERIALIZED_NAME_GOOGLE_PLAY_SERVICES = "googlePlayServices";
  @SerializedName(SERIALIZED_NAME_GOOGLE_PLAY_SERVICES)
  @javax.annotation.Nullable
  private Boolean googlePlayServices;

  public static final String SERIALIZED_NAME_DEVICE_SECURE = "deviceSecure";
  @SerializedName(SERIALIZED_NAME_DEVICE_SECURE)
  @javax.annotation.Nullable
  private Boolean deviceSecure;

  public NativeMeta() {
  }

  public NativeMeta build(@javax.annotation.Nonnull String build) {
    this.build = build;
    return this;
  }

  /**
   * Get build
   * @return build
   */
  @javax.annotation.Nonnull
  public String getBuild() {
    return build;
  }

  public void setBuild(@javax.annotation.Nonnull String build) {
    this.build = build;
  }


  public NativeMeta deviceOwnerAuth(@javax.annotation.Nullable String deviceOwnerAuth) {
    this.deviceOwnerAuth = deviceOwnerAuth;
    return this;
  }

  /**
   * Get deviceOwnerAuth
   * @return deviceOwnerAuth
   */
  @javax.annotation.Nullable
  public String getDeviceOwnerAuth() {
    return deviceOwnerAuth;
  }

  public void setDeviceOwnerAuth(@javax.annotation.Nullable String deviceOwnerAuth) {
    this.deviceOwnerAuth = deviceOwnerAuth;
  }


  public NativeMeta isPlatformAuthenticatorAPISupported(@javax.annotation.Nullable Boolean isPlatformAuthenticatorAPISupported) {
    this.isPlatformAuthenticatorAPISupported = isPlatformAuthenticatorAPISupported;
    return this;
  }

  /**
   * Get isPlatformAuthenticatorAPISupported
   * @return isPlatformAuthenticatorAPISupported
   */
  @javax.annotation.Nullable
  public Boolean getIsPlatformAuthenticatorAPISupported() {
    return isPlatformAuthenticatorAPISupported;
  }

  public void setIsPlatformAuthenticatorAPISupported(@javax.annotation.Nullable Boolean isPlatformAuthenticatorAPISupported) {
    this.isPlatformAuthenticatorAPISupported = isPlatformAuthenticatorAPISupported;
  }


  public NativeMeta isBluetoothAvailable(@javax.annotation.Nullable Boolean isBluetoothAvailable) {
    this.isBluetoothAvailable = isBluetoothAvailable;
    return this;
  }

  /**
   * Get isBluetoothAvailable
   * @return isBluetoothAvailable
   */
  @javax.annotation.Nullable
  public Boolean getIsBluetoothAvailable() {
    return isBluetoothAvailable;
  }

  public void setIsBluetoothAvailable(@javax.annotation.Nullable Boolean isBluetoothAvailable) {
    this.isBluetoothAvailable = isBluetoothAvailable;
  }


  public NativeMeta isBluetoothOn(@javax.annotation.Nullable Boolean isBluetoothOn) {
    this.isBluetoothOn = isBluetoothOn;
    return this;
  }

  /**
   * Get isBluetoothOn
   * @return isBluetoothOn
   */
  @javax.annotation.Nullable
  public Boolean getIsBluetoothOn() {
    return isBluetoothOn;
  }

  public void setIsBluetoothOn(@javax.annotation.Nullable Boolean isBluetoothOn) {
    this.isBluetoothOn = isBluetoothOn;
  }


  public NativeMeta googlePlayServices(@javax.annotation.Nullable Boolean googlePlayServices) {
    this.googlePlayServices = googlePlayServices;
    return this;
  }

  /**
   * Get googlePlayServices
   * @return googlePlayServices
   */
  @javax.annotation.Nullable
  public Boolean getGooglePlayServices() {
    return googlePlayServices;
  }

  public void setGooglePlayServices(@javax.annotation.Nullable Boolean googlePlayServices) {
    this.googlePlayServices = googlePlayServices;
  }


  public NativeMeta deviceSecure(@javax.annotation.Nullable Boolean deviceSecure) {
    this.deviceSecure = deviceSecure;
    return this;
  }

  /**
   * Get deviceSecure
   * @return deviceSecure
   */
  @javax.annotation.Nullable
  public Boolean getDeviceSecure() {
    return deviceSecure;
  }

  public void setDeviceSecure(@javax.annotation.Nullable Boolean deviceSecure) {
    this.deviceSecure = deviceSecure;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NativeMeta nativeMeta = (NativeMeta) o;
    return Objects.equals(this.build, nativeMeta.build) &&
        Objects.equals(this.deviceOwnerAuth, nativeMeta.deviceOwnerAuth) &&
        Objects.equals(this.isPlatformAuthenticatorAPISupported, nativeMeta.isPlatformAuthenticatorAPISupported) &&
        Objects.equals(this.isBluetoothAvailable, nativeMeta.isBluetoothAvailable) &&
        Objects.equals(this.isBluetoothOn, nativeMeta.isBluetoothOn) &&
        Objects.equals(this.googlePlayServices, nativeMeta.googlePlayServices) &&
        Objects.equals(this.deviceSecure, nativeMeta.deviceSecure);
  }

  @Override
  public int hashCode() {
    return Objects.hash(build, deviceOwnerAuth, isPlatformAuthenticatorAPISupported, isBluetoothAvailable, isBluetoothOn, googlePlayServices, deviceSecure);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NativeMeta {\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    deviceOwnerAuth: ").append(toIndentedString(deviceOwnerAuth)).append("\n");
    sb.append("    isPlatformAuthenticatorAPISupported: ").append(toIndentedString(isPlatformAuthenticatorAPISupported)).append("\n");
    sb.append("    isBluetoothAvailable: ").append(toIndentedString(isBluetoothAvailable)).append("\n");
    sb.append("    isBluetoothOn: ").append(toIndentedString(isBluetoothOn)).append("\n");
    sb.append("    googlePlayServices: ").append(toIndentedString(googlePlayServices)).append("\n");
    sb.append("    deviceSecure: ").append(toIndentedString(deviceSecure)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("build", "deviceOwnerAuth", "isPlatformAuthenticatorAPISupported", "isBluetoothAvailable", "isBluetoothOn", "googlePlayServices", "deviceSecure"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("build"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NativeMeta
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NativeMeta.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The required field(s) %s in NativeMeta is not found in the empty JSON string", NativeMeta.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NativeMeta.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The field `%s` in the JSON string is not defined in the `NativeMeta` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NativeMeta.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("build").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `build` to be a primitive type in the JSON string but got `%s`", jsonObj.get("build").toString()));
      }
      if ((jsonObj.get("deviceOwnerAuth") != null && !jsonObj.get("deviceOwnerAuth").isJsonNull()) && !jsonObj.get("deviceOwnerAuth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `deviceOwnerAuth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deviceOwnerAuth").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NativeMeta.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NativeMeta' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NativeMeta> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NativeMeta.class));

       return (TypeAdapter<T>) new TypeAdapter<NativeMeta>() {
           @Override
           public void write(JsonWriter out, NativeMeta value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NativeMeta read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NativeMeta given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NativeMeta
   * @throws IOException if the JSON string is invalid with respect to NativeMeta
   */
  public static NativeMeta fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NativeMeta.class);
  }

  /**
   * Convert an instance of NativeMeta to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

